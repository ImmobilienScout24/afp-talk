== Introduction ==

==== Outline ====

\tableofcontents[currentsection]

==== About Company ====

* \href{http://immobilienscout24.de}{Immobilienscout24}
* \href{https://twitter.com/IS24\_Developer}{@\@IS24\_Developer@}

--1cm--

* 2000 Machines in data-center
* 17 Years in IT

==== About Me ====

* Senior System Developer
* Doing Python and Cloud
* \href{https://twitter.com/esc\_\_\_}{@\@esc\_\_\_@}


== Our Problem ==

==== Outline ====

\tableofcontents[currentsection]

==== Our Problem ====

* Connect the office to the cloud (no VPN)
* Making the 2000 machines in the data-center ''cloud-ready''
* Easy and secure AWS service usage
* Temporary credentials for machines and humans

==== Our Solution ====

<[center]
<<<images/solution.pdf, scale=0.25>>>
[center]>

==== Enter: The AFP Project ====

<[center]
<<<images/solution-afp.pdf, scale=0.25>>>
[center]>

==== IAM Users and Static Credentials ====

* ''Identity and Access Management'' (IAM) Users
* Static Credentials
** @AWS\_ACCESS\_KEY\_ID@ etc...
** ssh-key
** Basically anything w/o and expiry date
* This is Badâ„¢

--1cm--

* --> Mine Bitcoins if lost

==== Multi-Account Paradigm ====

* We use multiple AWS accounts
* Goals:
** Reduce blast radius in case of compromise
** Modularise our data-center
** Feasible and incremental exit-strategy
** Divide and conquer
* Rules:
** Applications communicate over public internet
** Use well-defined interfaces
** No VPN connections between accounts
* Currently in hybrid-mode while migration in progress

== afp-core ==

==== Outline ====

\tableofcontents[currentsection]

==== afp-core ====

* ''AWS Federation Proxy'' (AFP)
* ''Custom Federation Broker''
* Different providers
** Linux group provider (humans)
** IP provider       (machines)
* A webapplication
* One of the few places left that ''does'' have static credentials
* Uses ''Secure Token Service'' (STS) and ''AssumeRole''

==== Connect ''Active Directory'' (AD) --> AWS (Humans) ====

* Special groups in AD: @aws-<ACCOUNT>-<ROLE>@
* AD users are members of such groups
* E.g. @aws\_account1\_read-only@
* --> role: @read\_only@ in accout @account1@
* (Yes, the regex it is configurable)

--1cm--

* Note: in our case it is AD, but it could be anything
* LDAP, Linux Users and Groups etc...

==== Schematic ====

<[center]
<<<images/afp-core.pdf, scale=0.3>>>
[center]>

== afp-web ==

==== Outline ====

\tableofcontents[currentsection]

==== afp-web ====

* Web-frontend for afp-core
* Give an overview of all available accounts and their usable roles for the \
  logged-in user
* Get and show temporary credentials for the selected account and role
* Automatic login to the AWS management console for the desired account

--1cm--

* See also: \href{https://docs.aws.amazon.com/IAM/latest/UserGuide/id\_roles\_providers\_enable-console-custom-url.html}{Creating a URL that Enables Federated Users to Access the AWS Management Console (Custom Federation Broker)}

==== Screenshot ====

<[center]
<<<images/afp-web.png, scale=0.3>>>
[center]>

==== Screenshot ====

<[center]
<<<images/screenshot-credentials.png, scale=0.3>>>
[center]>

== afp-cli ==

==== Outline ====

\tableofcontents[currentsection]

==== afp-cli ====

* Console/shell frontend for afp-core
* List available accounts and roles
* Open subshell with exported AWS creds
* Alternatively: display or write

==== Install ====[containsverbatim]

<[consolecode]
$ pip install afp-cli
[consolecode]>

--1cm--

* At our company: this just works!
* (Mainly because @https://afp@ can be resolved)
** Otherwise use:
** --> @index-url@(config)
** --> @-{}-index-url@(command-line)

==== Use ====[containsverbatim]

<[consolecode]
$ afp
account1     read-only
account2     access-all-areas, read-only
$ afp smarthome
...
(AWS: smarthome/access-all-areas 59 min) $ aws s3 ls
...
[consolecode]>

Alternatives --> see @README@

== afp-alppaca ==

==== Outline ====

\tableofcontents[currentsection]

==== ''Instance Metadata Service'' (IMS) ====[containsverbatim]

* Available on @169.254.169.254.169:80@ on every EC2 instance
* Provides information about the machines
* Also provides temporary security credentials

--1cm--

<[consolecode]
$ curl 169.254.169.254/latest/meta-data/iam/security-credentials/
test_role
$ curl 169.254.169.254/latest/meta-data/iam/security-credentials/test_role
'{"Code": "Success",
  "AccessKeyId": "ASIAI",
  "SecretAccessKey": "oieDhF",
  "Token": "6jmePdXNehjPVt7CZ1WMkKrqB6zDc34d2vpLej",
  "Expiration": "2015-04-17T13:40:18Z",
  "Type": "AWS-HMAC"}'
[consolecode]>

==== afp-alppaca ====

* ''A Local Prefetch Proxy for Amazon CredentiAls'' (alppaca)
* Probably the most interesting component
* Enables temporary credentials for machines
* Provides an ''Instance Metadata Service'' (IMS) compatible interface

--1cm--

* --> Machines in data-center are ''cloud-ready''
* (Yes, all 2000 of them can do this today!)


==== Schematic ====

<[center]
<<<images/alppaca.pdf, scale=0.3>>>
[center]>

==== Details ====

* Listens on @169.254.169.254:80@
** Uses Linux firewall magic (@iptables@)
* Prefetches temporary credentials and stores them in memory
* Always has a valid set of credentials
** Always able to deliver them in sub 1 second
** No changes to Amazon SDKs needed
* Roles are in the special @dc-account@

==== Special Feature: Under the Hood @AssumeRole@ ====

* afp-alppaca can be configured to perform an @AssumeRole@ under the hood
* The data-center machine can appear to be in any one of our accounts
* Requires a role for that machine in that account and a ''trusted principle'' \
  to enable the @AssumeRole@ call

==== Further Uses: on EC2 in the Cloud ====

* Run afp-alppaca on an EC2 instance?
* Yes, to allow cross-account access

--1cm--

* More Linux magic needed

== Epilogue ==

==== Outline ====

\tableofcontents[currentsection]

==== Alternatives? ====

* \href{https://github.com/hashicorp/vault}{hashicorp/vault}
* \href{https://github.com/AdRoll/hologram}{AdRoll/hologram}

--1cm--

* You tell me?

==== Links ====

* All of it is open-source!

* \href{https://immobilienscout24.github.io/afp/}{https://immobilienscout24.github.io/afp/}


--2cm--

* Questions?

